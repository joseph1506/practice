<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-3.2.xsd
                           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="practice.springaop"/>
    <context:component-scan base-package="practice.XMLOps"/>
    <context:component-scan base-package="practice.beanpostprocessor"/>
    <context:component-scan base-package="practice.springcaching"/>
    <context:component-scan base-package="practice.restclient"/>
    <context:component-scan base-package="practice.springbeanwiring"/>

    <bean class="practice.beanpostprocessor.AddDefaultUnitToCostProcessor"/>


    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:user-service>
                <security:user name="admin" password="admin" authorities="ROLE_ADMIN"/>
                <security:user name="user" password="user" authorities="ROLE_USER"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http entry-point-ref="restAuthenticationEntryPoint">
        Â Â Â Â Â Â <security:intercept-url pattern="/api/admin/**" access="ROLE_ADMIN"/>
              <security:form-login authentication-success-handler-ref="mySuccessHandler" authentication-failure-handler-ref="myFailureHandler"  />
        Â Â Â Â Â Â <security:logout />
    </security:http>

    <!--<bean id="mySuccessHandler"
                class="org.rest.security.MySavedRequestAwareAuthenticationSuccessHandler"/>-->
    <bean id="mySuccessHandler"
          class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"/>
    <bean id="myFailureHandler" class=
            "org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"/>


    <!--<bean id="myFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler" ref="mySuccessHandler"/>
    </bean>-->

    <bean id="audience" class="practice.springaop.Audience"/>
    <bean id="performer" class="practice.springaop.Performer"/>
    <bean id="psychic" class="practice.springaop.Psychic"/>
    <bean id="thinker" class="practice.springaop.Volunteer"/>

    <aop:aspectj-autoproxy/>
    <bean id="fileLogger" class="practice.springaop.FileLogger"/>


    <bean id="customMarshaller"
          class="org.springframework.oxm.jaxb.Jaxb2Marshaller" autowire="byName">
        <property name="classesToBeBound">
            <list>
                <value>practice.XMLOps.OrderRequest</value>
            </list>
        </property>
    </bean>

    <bean id="playStation" class="practice.beanpostprocessor.Commodity" autowire="byName">
        <property name="name" value="SONY PSP"/>
        <property name="inStock" value="true"/>
        <property name="cost" value="20000"/>
    </bean>

    <bean id="xBox" class="practice.beanpostprocessor.Commodity" autowire="byName">
        <property name="name" value="MS X BOX"/>
        <property name="inStock" value="true"/>
        <property name="cost" value="15000"/>
    </bean>



<aop:config>
  <aop:aspect ref="audience">
      <aop:pointcut id="perfomance" expression="execution(* practice.springaop.Performer.perform(..))" />

      <aop:before method="takeSeats" pointcut-ref="perfomance"/>
      <aop:before method="turnOffCellPhones" pointcut-ref="perfomance"/>

      <aop:after method="applaud" pointcut-ref="perfomance"/>
      <aop:around method="performanceTime" pointcut-ref="perfomance"/>
      <aop:after-throwing method="demandRefund" pointcut-ref="perfomance"/>
  </aop:aspect>

    <aop:aspect ref="psychic">
     <aop:pointcut id="thinking" expression="execution(* practice.springaop.Thinker.thinkOfSomething(String)) and args(thoughts)"/>
        <aop:after pointcut-ref="thinking" method="interceptThoughts" arg-names="thoughts"/>
    </aop:aspect>

</aop:config>


    <!--datasource from jndi lookup-->
    <!--<jee:jndi-lookup jndi-name="somename" resource-ref="true"/>-->

    <!--pooled datasource-->
    <!--<bean id="pooledDs" class="oracle.jdbc.pool.OracleDataSource" destroy-method="close">
        <property name="URL" value="someURL"/>
        <property name="user" value="someUser"/>
        <property name="password" value="somePassword"/>
        <property name="connectionCachingEnabled" value="true"/>
        <property name="connectionCacheProperties">
            <props>
                <prop key="MinLimit">1</prop>
                <prop key="MaxLimit">3</prop>
                <prop key="InitialLimit">2</prop>
            </props>
        </property>
    </bean>

    <bean id="BasicDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="someUrl"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="10"/>
    </bean>

    <bean id="jdbcTemplateTest" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="pooledDs"/>
        <property name="fetchSize" value="340"/>
    </bean>


    <bean id="testTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="userTransactionName" value="javax.transaction.UserTransaction"/>
        <property name="transactionManagerName" value="javax.transaction.TransactionManager"/>
    </bean>-->

    <!--<tx:annotation-driven transaction-manager="testTransactionManager"/>-->

    <!--<tx:advice id="testTransactionAdviceRef" transaction-manager="testTransactionManager">
        <tx:attributes>
            <tx:method name="peform" propagation="REQUIRES_NEW" rollback-for="Exception"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>
    
    <aop:config>
        <aop:pointcut id="testPointCut" expression="execution(* practice.springaop.Performer.*())"/>
        <aop:advisor advice-ref="testTransactionAdviceRef" pointcut-ref="testPointCut"/>
    </aop:config>-->

    <!--<bean id="defaultService" class="practice.springbeanwiring.DeliveryService"/>
    <bean id="postService" factory-bean="defaultService" factory-method="createPostService"/>
    <bean id="deliveryService" factory-bean="defaultService" factory-method="createDeliveryService"/>-->

    <!-- serviceLocator example-->
    <bean id="jsonParser" class="practice.springbeanwiring.serviceLocator.JSONParser" scope="prototype"/>
    <bean id="xmlParser" class="practice.springbeanwiring.serviceLocator.XMLParser" scope="prototype"/>

    <bean id="parseFactory" class="org.springframework.beans.factory.config.ServiceLocatorFactoryBean">
        <property name="serviceLocatorInterface" value="practice.springbeanwiring.serviceLocator.IParserFactory"/>
    </bean>

    <bean id="parserBean" class="practice.springbeanwiring.serviceLocator.ParserBean">
      <property name="parseFactory" ref="parseFactory"/>
    </bean>


</beans>
